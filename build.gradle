plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.CODE-ALPHA'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {
    // Spring Data JPA for ORM and database interaction with JPA/Hibernate
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Web for building RESTful web services and web applications
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    // Lombok for reducing boilerplate code (e.g., getters, setters, constructors)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring DevTools for hot reloading and development utilities
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // H2 in-memory database for testing and local development
    runtimeOnly 'com.h2database:h2'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JUnit platform launcher for running tests
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Spring Boot Test starter for unit and integration testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring WebFlux for reactive web applications using Project Reactor
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Data MongoDB Reactive for non-blocking, reactive access to MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'io.projectreactor:reactor-core'
    testImplementation 'io.projectreactor:reactor-test'

    //Websocket

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
}


tasks.named('test') {
    useJUnitPlatform()
}
